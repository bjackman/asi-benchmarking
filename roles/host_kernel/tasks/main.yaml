- name: Upload kernel package
  copy:
    src: "{{ kernel_deb_local_path }}"
    dest: "/tmp/{{ kernel_deb_local_path | basename }}"

- name: Install kernel
  become: yes
  apt:
    deb: "/tmp/{{ kernel_deb_local_path | basename }}"
  register: kernel_deb_install_result

# Installing the kernel should have created a grub menu entry. Now we just
# need to figure out the title of that entry and set GRUB_DEFAULT to that
# value. It loooks like
# gnulinux-6.10.0always-srso+-advanced-17d5cd79-9f0c-49dc-a4a9-65bd1ee5dd47
# So we need to figure out the UUID of our root partition and then combine
# that with the kernel release. I'm not sure where "advanced" comes from.
- name: Find rootfs UUID
  become: yes
  shell:
    cmd: blkid -s UUID -o value $(sudo findmnt -no SOURCE /)
  register: rootfs_uuid_result
  failed_when: rootfs_uuid_result.stdout == ""
- name: Select kernel in Grub
  become: yes
  lineinfile:
    path: /etc/default/grub
    regexp: '^GRUB_DEFAULT='
    line: 'GRUB_DEFAULT="gnulinux-{{ kernel_release_string }}-advanced-{{ rootfs_uuid_result.stdout | trim }}"'
  register: modify_grub_default_result

- name: Modify kernel cmdline
  become: yes
  lineinfile:
    path: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX='
    line: 'GRUB_CMDLINE_LINUX="{{ kernel_cmdline }}"'
  register: modify_grub_cmdline_result

- name: Update grub
  become: yes
  command: update-grub
  when: modify_grub_cmdline_result.changed or modify_grub_default_result.changed
  register: update_grub_result

- name: Record that a reboot is needed
  when: kernel_deb_install_result.changed or update_grub_result.changed
  set_fact:
    reboot_required_for_kernel: true